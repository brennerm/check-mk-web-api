site_name: "Check_MK Web API"
repo_url: https://github.com/brennerm/check-mk-web-api

# This tells pydocmd which pages to generate from which Python modules,
# functions and classes. At the first level is the page name, below that
# is a tree of Python member names (modules, classes, etc.) that should be
# documented. Higher indentation leads to smaller header size.
generate:
- check_mk_web_api.md:
    - check_mk_web_api.WebApi+
- no_none_value_dict.md:
    - check_mk_web_api.no_none_value_dict.NoNoneValueDict+
- exceptions.md:
    - check_mk_web_api.exception+

# MkDocs pages configuration. The `<<` operator is sugar added by pydocmd
# that allows you to use an external Markdown file (eg. your project's README)
# in the documentation. The path must be relative to current working directory.
pages:
- Home: index.md << ../README.md
- API Documentation:
  - WebAPI: check_mk_web_api.md
  - Exceptions: exceptions.md
  - Utility: no_none_value_dict.md

# These options all show off their default values. You don't have to add
# them to your configuration if you're fine with the default.

# Additional search path for your Python module. If you use Pydocmd from a
# subdirectory of your project (eg. docs/), you may want to add the parent
# directory here.
additional_search_paths:
- ..
